name: MR Stopportal workflow

on:
  pull_request:
    branches:
      - main

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      working-directory: server
      run: pip install -r requirements.txt

    - name: Run pytest check
      working-directory: server
      run: pytest -vv Fix-m "not integrations"

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        working-directory: server
        run: pip install -r requirements.txt

      - name: Run black check
        working-directory: server
        run: black --check .
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        working-directory: server
        run: pip install -r requirements.txt

      - name: Run flake8 check
        working-directory: server
        run: flake8 --count .
#  mypy:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup python
#        uses: actions/setup-python@v5
#        with:
#          python-version: 3.11
#
#      - name: Install poetry
#        uses: Gr1N/setup-poetry@v8
#
#      - name: Install dependencies
#        working-directory: backend
#        run: poetry install
#
#      - name: Run mypy check
#        working-directory: backend
#        run: poetry run mypy .
  frontend_lint:
    name: Frontend tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up nodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Install dependencies 2
        working-directory: frontend
        run: npm ci

      - name: Lint
        working-directory: frontend
        run: npm run lint

  send_message:
    name: Sent notification to Telegram
    runs-on: ubuntu-latest
    needs:
      - black
      - flake8
      - frontend_lint
      - pytest
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Проверки PR успешно прошли!

