name: Main Stopportal workflow

on:
  push:
    branches:
      - logging
      - main

jobs:
  build_backend_docker:
    name: Build and push Backend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stopportal-backend:latest

  build_celeryworker_docker:
    name: Build and push Celery worker Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          file: ./backend/Dockerfile-celeryworker
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stopportal-celeryworker:latest

  build_frontend_docker:
    name: Build and push Frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stopportal-frontend:latest

  build_nginx_docker:
    name: Build and push Gateway Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./infra/nginx/
          file: ./infra/nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stopportal-gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend_docker
      - build_frontend_docker
      - build_nginx_docker
      - build_celeryworker_docker
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            deploy/docker-compose-test.yml
            deploy/.env
          sparse-checkout-cone-mode: false
      - name: Copy docker-compose-test.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy/docker-compose-test.yml,deploy/.env"
          target: "stopportal/test"
          strip_components: 1
          overwrite: true
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd stopportal/test
            sudo docker compose -f docker-compose-test.yml -p test pull
            sudo docker compose -f docker-compose-test.yml -p test down
            sudo docker compose -f docker-compose-test.yml -p test up -d

  send_message:
    name: Sent notification to Telegram
    runs-on: ubuntu-latest
    needs:
      - deploy
    steps:
      - name: Send success message
        uses: appleboy/telegram-action@master
        if: success()
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "TEST - Деплой успешно выполнен!"
      - name: Send failure message
        uses: appleboy/telegram-action@master
        if: failure()
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "TEST - Ошибка во время деплоя!"
